{"version":3,"file":"svg.panzoom.min.js","sources":["../src/svg.panzoom.js"],"sourcesContent":["import { Svg, on, off, extend, Matrix, Box } from '@svgdotjs/svg.js'\r\n\r\nconst normalizeEvent = ev =>\r\n  ev.touches || [{ clientX: ev.clientX, clientY: ev.clientY }]\r\n\r\nextend(Svg, {\r\n  panZoom (options) {\r\n    this.off('.panZoom')\r\n\r\n    // when called with false, disable panZoom\r\n    if (options === false) return this\r\n\r\n    options = options ?? {}\r\n    const zoomFactor = options.zoomFactor ?? 2\r\n    const zoomMin = options.zoomMin ?? Number.MIN_VALUE\r\n    const zoomMax = options.zoomMax ?? Number.MAX_VALUE\r\n    const doWheelZoom = options.wheelZoom ?? true\r\n    const doPinchZoom = options.pinchZoom ?? true\r\n    const doPanning = options.panning ?? true\r\n    const panButton = options.panButton ?? 0\r\n    const oneFingerPan = options.oneFingerPan ?? false\r\n    const margins = options.margins ?? false\r\n    const wheelZoomDeltaModeLinePixels = options.wheelZoomDeltaModeLinePixels ?? 17\r\n    const wheelZoomDeltaModeScreenPixels = options.wheelZoomDeltaModeScreenPixels ?? 53\r\n\r\n    let lastP\r\n    let lastTouches\r\n    let zoomInProgress = false\r\n\r\n    const restrictToMargins = box => {\r\n      if (!margins) return box\r\n      const { top, left, bottom, right } = margins\r\n      const zoom = this.width() / box.width\r\n\r\n      const { width, height } = this.attr(['width', 'height'])\r\n\r\n      const leftLimit = width - left / zoom\r\n      const rightLimit = (right - width) / zoom\r\n      const topLimit = height - top / zoom\r\n      const bottomLimit = (bottom - height) / zoom\r\n\r\n      box.x = Math.min(leftLimit, Math.max(rightLimit, box.x))\r\n      box.y = Math.min(topLimit, Math.max(bottomLimit, box.y))\r\n      return box\r\n    }\r\n\r\n    const wheelZoom = function (ev) {\r\n      ev.preventDefault()\r\n\r\n      // When wheeling on a mouse,\r\n      // - chrome by default uses deltaY = 53, deltaMode = 0 (pixel)\r\n      // - firefox by default uses deltaY = 3, deltaMode = 1 (line)\r\n      // - chrome and firefox on windows after configuring \"One screen at a time\"\r\n      //   use deltaY = 1, deltaMode = 2 (screen)\r\n      //\r\n      // Note that when when wheeling on a touchpad, deltaY depends on how fast\r\n      // you swipe, but the deltaMode is still different between the browsers.\r\n      //\r\n      // Normalize everything so that zooming speed is approximately the same in all cases\r\n      let normalizedPixelDeltaY\r\n      switch (ev.deltaMode) {\r\n      case 1:\r\n        normalizedPixelDeltaY = ev.deltaY * wheelZoomDeltaModeLinePixels\r\n        break\r\n      case 2:\r\n        normalizedPixelDeltaY = ev.deltaY * wheelZoomDeltaModeScreenPixels\r\n        break\r\n      default:\r\n        // 0 (already pixels) or new mode (avoid crashing)\r\n        normalizedPixelDeltaY = ev.deltaY\r\n        break\r\n      }\r\n\r\n      let lvl = Math.pow(1 + zoomFactor, (-1 * normalizedPixelDeltaY) / 100) * this.zoom()\r\n      const p = this.point(ev.clientX, ev.clientY)\r\n\r\n      if (lvl > zoomMax) {\r\n        lvl = zoomMax\r\n      }\r\n\r\n      if (lvl < zoomMin) {\r\n        lvl = zoomMin\r\n      }\r\n\r\n      if (this.dispatch('zoom', { level: lvl, focus: p }).defaultPrevented) {\r\n        return this\r\n      }\r\n\r\n      this.zoom(lvl, p)\r\n\r\n      if (margins) {\r\n        const box = restrictToMargins(this.viewbox())\r\n        this.viewbox(box)\r\n      }\r\n    }\r\n\r\n    const pinchZoomStart = function (ev) {\r\n      lastTouches = normalizeEvent(ev)\r\n\r\n      // Start panning in case only one touch is found\r\n      if (lastTouches.length < 2) {\r\n        if (doPanning && oneFingerPan) {\r\n          panStart.call(this, ev)\r\n        }\r\n        return\r\n      }\r\n\r\n      // Stop panning for more than one touch\r\n      if (doPanning && oneFingerPan) {\r\n        panStop.call(this, ev)\r\n      }\r\n\r\n      // We call it so late, so the user is still able to scroll / reload the page via gesture\r\n      // In case oneFingerPan is not active\r\n      ev.preventDefault()\r\n\r\n      if (this.dispatch('pinchZoomStart', { event: ev }).defaultPrevented) {\r\n        return\r\n      }\r\n\r\n      this.off('touchstart.panZoom', pinchZoomStart)\r\n\r\n      zoomInProgress = true\r\n      on(document, 'touchmove.panZoom', pinchZoom, this, { passive: false })\r\n      on(document, 'touchend.panZoom', pinchZoomStop, this, { passive: false })\r\n    }\r\n\r\n    const pinchZoomStop = function (ev) {\r\n      ev.preventDefault()\r\n\r\n      const currentTouches = normalizeEvent(ev)\r\n      if (currentTouches.length > 1) {\r\n        return\r\n      }\r\n\r\n      zoomInProgress = false\r\n\r\n      this.dispatch('pinchZoomEnd', { event: ev })\r\n\r\n      off(document, 'touchmove.panZoom', pinchZoom)\r\n      off(document, 'touchend.panZoom', pinchZoomStop)\r\n      this.on('touchstart.panZoom', pinchZoomStart)\r\n\r\n      if (currentTouches.length && doPanning && oneFingerPan) {\r\n        panStart.call(this, ev)\r\n      }\r\n    }\r\n\r\n    const pinchZoom = function (ev) {\r\n      ev.preventDefault()\r\n\r\n      const currentTouches = normalizeEvent(ev)\r\n      const zoom = this.zoom()\r\n\r\n      // Distance Formula\r\n      const lastDelta = Math.sqrt(\r\n        Math.pow(lastTouches[0].clientX - lastTouches[1].clientX, 2) +\r\n          Math.pow(lastTouches[0].clientY - lastTouches[1].clientY, 2)\r\n      )\r\n\r\n      const currentDelta = Math.sqrt(\r\n        Math.pow(currentTouches[0].clientX - currentTouches[1].clientX, 2) +\r\n          Math.pow(currentTouches[0].clientY - currentTouches[1].clientY, 2)\r\n      )\r\n\r\n      let zoomAmount = lastDelta / currentDelta\r\n\r\n      if (\r\n        (zoom < zoomMin && zoomAmount > 1) ||\r\n        (zoom > zoomMax && zoomAmount < 1)\r\n      ) {\r\n        zoomAmount = 1\r\n      }\r\n\r\n      const currentFocus = {\r\n        x:\r\n          currentTouches[0].clientX +\r\n          0.5 * (currentTouches[1].clientX - currentTouches[0].clientX),\r\n        y:\r\n          currentTouches[0].clientY +\r\n          0.5 * (currentTouches[1].clientY - currentTouches[0].clientY)\r\n      }\r\n\r\n      const lastFocus = {\r\n        x:\r\n          lastTouches[0].clientX +\r\n          0.5 * (lastTouches[1].clientX - lastTouches[0].clientX),\r\n        y:\r\n          lastTouches[0].clientY +\r\n          0.5 * (lastTouches[1].clientY - lastTouches[0].clientY)\r\n      }\r\n\r\n      const p = this.point(currentFocus.x, currentFocus.y)\r\n      const focusP = this.point(\r\n        2 * currentFocus.x - lastFocus.x,\r\n        2 * currentFocus.y - lastFocus.y\r\n      )\r\n      const box = new Box(this.viewbox()).transform(\r\n        new Matrix()\r\n          .translate(-focusP.x, -focusP.y)\r\n          .scale(zoomAmount, 0, 0)\r\n          .translate(p.x, p.y)\r\n      )\r\n\r\n      restrictToMargins(box)\r\n      this.viewbox(box)\r\n\r\n      lastTouches = currentTouches\r\n\r\n      this.dispatch('zoom', { box: box, focus: focusP })\r\n    }\r\n\r\n    const panStart = function (ev) {\r\n      const isMouse = ev.type.indexOf('mouse') > -1\r\n\r\n      // In case panStart is called with touch, ev.button is undefined\r\n      if (isMouse && ev.button !== panButton && ev.which !== panButton + 1) {\r\n        return\r\n      }\r\n\r\n      ev.preventDefault()\r\n\r\n      this.off('mousedown.panZoom', panStart)\r\n\r\n      lastTouches = normalizeEvent(ev)\r\n\r\n      if (zoomInProgress) return\r\n\r\n      this.dispatch('panStart', { event: ev })\r\n\r\n      lastP = { x: lastTouches[0].clientX, y: lastTouches[0].clientY }\r\n\r\n      on(document, 'touchmove.panZoom mousemove.panZoom', panning, this, {\r\n        passive: false\r\n      })\r\n\r\n      on(document, 'touchend.panZoom mouseup.panZoom', panStop, this, {\r\n        passive: false\r\n      })\r\n    }\r\n\r\n    const panStop = function (ev) {\r\n      ev.preventDefault()\r\n\r\n      off(document, 'touchmove.panZoom mousemove.panZoom', panning)\r\n      off(document, 'touchend.panZoom mouseup.panZoom', panStop)\r\n      this.on('mousedown.panZoom', panStart)\r\n\r\n      this.dispatch('panEnd', { event: ev })\r\n    }\r\n\r\n    const panning = function (ev) {\r\n      ev.preventDefault()\r\n\r\n      const currentTouches = normalizeEvent(ev)\r\n\r\n      const currentP = {\r\n        x: currentTouches[0].clientX,\r\n        y: currentTouches[0].clientY\r\n      }\r\n\r\n      const p1 = this.point(currentP.x, currentP.y)\r\n\r\n      const p2 = this.point(lastP.x, lastP.y)\r\n\r\n      const deltaP = [p2.x - p1.x, p2.y - p1.y]\r\n\r\n      if (!deltaP[0] && !deltaP[1]) {\r\n        return\r\n      }\r\n\r\n      const box = new Box(this.viewbox()).transform(\r\n        new Matrix().translate(deltaP[0], deltaP[1])\r\n      )\r\n\r\n      lastP = currentP\r\n\r\n      restrictToMargins(box)\r\n\r\n      if (this.dispatch('panning', { box, event: ev }).defaultPrevented) {\r\n        return\r\n      }\r\n\r\n      this.viewbox(box)\r\n    }\r\n\r\n    if (doWheelZoom) {\r\n      this.on('wheel.panZoom', wheelZoom, this, { passive: false })\r\n    }\r\n\r\n    if (doPinchZoom) {\r\n      this.on('touchstart.panZoom', pinchZoomStart, this, { passive: false })\r\n    }\r\n\r\n    if (doPanning) {\r\n      this.on('mousedown.panZoom', panStart, this, { passive: false })\r\n    }\r\n\r\n    return this\r\n  }\r\n})\r\n"],"names":["normalizeEvent","ev","touches","clientX","clientY","Svg","panZoom","options","off","this","restrictToMargins","box","margins","top","left","bottom","right","zoom","_this","width","attr","height","leftLimit","rightLimit","topLimit","bottomLimit","x","Math","min","max","y","pinchZoomStart","lastTouches","length","doPanning","oneFingerPan","panStart","call","panStop","preventDefault","dispatch","event","defaultPrevented","zoomInProgress","on","document","pinchZoom","passive","pinchZoomStop","lastP","zoomFactor","zoomMin","Number","MIN_VALUE","zoomMax","MAX_VALUE","doWheelZoom","wheelZoom","doPinchZoom","panning","panButton","wheelZoomDeltaModeLinePixels","wheelZoomDeltaModeScreenPixels","currentTouches","zoomAmount","sqrt","pow","currentFocus","lastFocus","p","point","focusP","Box","viewbox","transform","Matrix","translate","scale","focus","type","indexOf","button","which","currentP","p1","p2","deltaP","normalizedPixelDeltaY","deltaMode","deltaY","lvl","level"],"mappings":"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"}