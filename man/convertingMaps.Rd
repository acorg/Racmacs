% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map_conversion.R
\name{convertingMaps}
\alias{convertingMaps}
\alias{as.list.racchart}
\alias{as.cpp}
\title{Converting between map formats}
\usage{
\method{as.list}{racchart}(map)

as.cpp(map)
}
\arguments{
\item{map}{The map object to be converted.}
}
\value{
Returns the converted map data object.
}
\description{
Functions to convert between the 'racmap' and 'racchart' formats (see details).
}
\details{
There are two map data formats supported within Racmacs termed an
  'acmap' and an 'acchart'.

  In short, if all you want to do is access the
  map data for your own plotting or visualization or analysis, you can
  choose the 'acmap' format, which is simply an R \code{\link[base]{list}}.

  If you plan to do further manipulation of the map in terms of doing further
  optimization runs, diagnostic testing etc. then you should choose the 'acchart'
  format.

  The reason for this is that the guts of most of the map making functions come
  through the package acmacs.r, which uses underlying C++ objects for manipulation
  of data. The 'acchart' format manipulates the underlying C++ object directly and
  calls methods to make and relax maps, which will be very quick, however each time
  a read or write call is made to this object there is some overhead which can
  quickly slow down operations like altering all the coordinates in a set of 100
  optimizations. In these cases, the list-based 'acmap' format will perform better.

  In practise, you shouldn't notice too much difference but if one format is
  particularly slow when you think it shouldn't be (often the 'acchart') format,
  you may consider using or converting to the other.
}
