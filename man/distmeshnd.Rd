% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_distmeshnd.R
\name{distmeshnd}
\alias{distmeshnd}
\title{A simple mesh generator for non-convex regions in n-D space}
\usage{
distmeshnd(fdist, fh, h, box, pfix = array(dim = c(0, ncol(box))),
  ptol = 0.001, ttol = 0.1, deltat = 0.1, geps = 0.1 * h,
  deps = sqrt(.Machine$double.eps) * h, max_delauney = 10, ...)
}
\arguments{
\item{fdist}{Vectorized signed distance function, for example mesh.dsphere, accepting an m-by-n matrix, where m is arbitrary, as the first argument.}

\item{fh}{Vectorized function, for example mesh.hunif, that returns desired edge length as a function of position. Accepts an m-by-n matrix, where n is arbitrary, as its first argument.}

\item{h}{Initial distance between mesh nodes.}

\item{box}{2-by-n matrix that specifies the bounding box. (See distmesh2d for an example.)}

\item{pfix}{nfix-by-2 matrix with fixed node positions.}

\item{ptol}{Algorithm stops when all node movements are smaller than ptol}

\item{ttol}{Controls how far the points can move (relatively) before a retriangulation with delaunayn.}

\item{deltat}{Size of the time step in Eulers method.}

\item{geps}{Tolerance in the geometry evaluations.}

\item{deps}{Stepsize delta x in numerical derivative computation for distance function.}

\item{max_delauney}{Maximum delauney}

\item{...}{parameters that are passed to fdist and fh}
}
\description{
An unstructured simplex requires a choice of meshpoints (vertex nodes) and a triangulation. This
is a simple and short algorithm that improves the quality of a mesh by relocating the meshpoints
according to a relaxation scheme of forces in a truss structure. The topology of the truss is
reset using Delaunay triangulation. A (sufficiently smooth) user supplied signed distance
function (fd) indicates if a given node is inside or outside the region. Points outside the
region are projected back to the boundary.
}
