% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map_optimize.R
\name{optimizeMap}
\alias{optimizeMap}
\title{Optimize an acmap}
\usage{
optimizeMap(map, number_of_dimensions, number_of_optimizations,
  minimum_column_basis, fixed_column_bases = NULL,
  move_trapped_points = NULL, discard_previous_optimizations = TRUE,
  sort_optimizations = TRUE, realign_optimizations = TRUE,
  verbose = TRUE, parallel_optimization = TRUE)
}
\arguments{
\item{map}{The acmap data object}

\item{number_of_dimensions}{The number of dimensions for the new map}

\item{number_of_optimizations}{The number of optimization runs to perform}

\item{minimum_column_basis}{The minimum column basis to use (see details)}

\item{move_trapped_points}{Should trapped points be searched for and removed, one of 'none', 'best' or 'all' (see details)}

\item{discard_previous_optimizations}{Should previous optimizations associated with this map be discarded?}

\item{sort_optimizations}{Should optimizations be sorted by stress afterwards?}

\item{realign_optimizations}{Should optimizations be realigned to align as closely as possible with each other?}

\item{verbose}{Should progress be reported?}
}
\value{
Returns the acmap object updated with new optimizations.
}
\description{
Take an acmap object with a table of titer data and perform optimization runs
to try and find the best arrangement of antigens and sera to represent their
antigenic similarity. Optimizations generated from each run with different random
starting conditions will be added to the acmap object.
}
\details{
This is the core function to run map optimizations. In essence, for each optimization run, points are randomly distributed in
5-dimensional space, the L-BFGS gradient-based optimization algorithm is applied to move points into an optimal position and then
principal component analysis is used to reduce the number of dimensions and the process repeated until the desired number of dimensions is
reached. Depending on the map, this may not be a trivial optimization process and results will depend upon the starting conditions.

\subsection{Trapped points}{
Each optimization run can be checked for trapped points which involves taking each point in turn and testing it in different alternative
locations in the map. If a more optimal position is found, the point is moved and the process repeated.

Although effective this is computationally quite expensive and so the default setting is to apply this only the 'best' (lowest stress) map.
This step can alternatively be skipped by setting 'none' or applied to all optimization runs by specifying 'all'.
}

\subsection{Minimum column basis}{
}
}
\seealso{
See \code{\link{relaxMap}} for optimizing a given optimization starting from its current coordinates.
}
